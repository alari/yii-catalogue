<?php

/**
 * This is the model base class for the table "{{catalogue_category_info}}".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "CatalogueCategoryInfo".
 *
 * Columns in table "{{catalogue_category_info}}" available as properties of the model,
 * followed by relations of table "{{catalogue_category_info}}" available as properties of the model.
 *
 * @property integer $id
 * @property integer $category_id
 * @property string $description
 *
 * @property CatalogueCategory $category
 */
abstract class BaseCatalogueCategoryInfo extends GxActiveRecord {

    public static function model($className=__CLASS__) {
        return parent::model($className);
    }

    public function tableName() {
        return '{{catalogue_category_info}}';
    }

    public static function label($n = 1) {
        return Yii::t('app', 'CatalogueCategoryInfo|CatalogueCategoryInfos', $n);
    }

    public static function representingColumn() {
        return 'description';
    }

    public function rules() {
        return array(
            array('category_id', 'numerical', 'integerOnly'=>true),
            array('description', 'safe'),
            array('category_id, description', 'default', 'setOnEmpty' => true, 'value' => null),
            array('id, category_id, description', 'safe', 'on'=>'search'),
        );
    }

    public function relations() {
        return array(
            'category' => array(self::BELONGS_TO, 'CatalogueCategory', 'category_id'),
        );
    }

    public function pivotModels() {
        return array(
        );
    }

    public function attributeLabels() {
        return array(
            'id' => Yii::t('app', 'ID'),
            'category_id' => null,
            'description' => Yii::t('app', 'Description'),
            'category' => null,
        );
    }

    public function search() {
        $criteria = new CDbCriteria;

        $criteria->compare('id', $this->id);
        $criteria->compare('category_id', $this->category_id);
        $criteria->compare('description', $this->description, true);

        return new CActiveDataProvider($this, array(
            'criteria' => $criteria,
        ));
    }
}